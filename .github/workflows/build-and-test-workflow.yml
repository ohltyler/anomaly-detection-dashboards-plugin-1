name: Build and test workflow
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
env:
  OPENSEARCH_DASHBOARDS_VERSION: 'main'
jobs:
  Get-CI-Image-Tag:
    runs-on: ubuntu-latest
    outputs:
      ci-image-version-linux: ${{ steps.step-ci-image-version-linux.outputs.ci-image-version-linux }}
    steps:
      - name: Install crane
        uses: iarekylew00t/crane-installer@v1
        with:
          crane-release: v0.15.2
      - name: Checkout opensearch-build repository
        uses: actions/checkout@v2
        with:
          repository: "opensearch-project/opensearch-build"
          ref: "main"
          path: "opensearch-build"
      - name: Get ci image version from opensearch-build repository scripts
        id: step-ci-image-version-linux
        run: |
          crane version
          CI_IMAGE_VERSION=`opensearch-build/docker/ci/get-ci-images.sh -p rockylinux8 -u opensearch-dashboards -t build | head -1`          echo $CI_IMAGE_VERSION
          echo "ci-image-version-linux=$CI_IMAGE_VERSION" >> $GITHUB_OUTPUT
  build-and-test:
    name: Build the plugin and run unit tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: Get-CI-Image-Tag
    steps:
      # Enable longer filenames for windows
      - name: Enable longer filenames
        if: ${{ matrix.os == 'windows-latest' }}
        run: git config --system core.longpaths true
      - name: Checkout OpenSearch Dashboards
        uses: actions/checkout@v2
        with:
          repository: opensearch-project/OpenSearch-Dashboards
          ref: ${{ env.OPENSEARCH_DASHBOARDS_VERSION }}
          path: OpenSearch-Dashboards
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: './OpenSearch-Dashboards/.nvmrc'
          registry-url: 'https://registry.npmjs.org'
      - name: Install Yarn
        # Need to use bash to avoid having a windows/linux specific step
        shell: bash
        run: |
          YARN_VERSION=$(node -p "require('./OpenSearch-Dashboards/package.json').engines.yarn")
          echo "Installing yarn@$YARN_VERSION"
          npm i -g yarn@$YARN_VERSION
      - run: node -v
      - run: yarn -v
      - name: Checkout Anomaly Detection OpenSearch Dashboards plugin
        uses: actions/checkout@v2
        with:
          path: OpenSearch-Dashboards/plugins/anomaly-detection-dashboards-plugin
      - name: Bootstrap the plugin
        run: |
          cd OpenSearch-Dashboards/plugins/anomaly-detection-dashboards-plugin
          yarn osd bootstrap
      - name: Build the plugin
          cd OpenSearch-Dashboards/plugins/anomaly-detection-dashboards-plugin
          yarn build
      - name: Run unit tests
        run: |
          cd OpenSearch-Dashboards/plugins/anomaly-detection-dashboards-plugin
          yarn run test:jest --coverage
      - name: Uploads coverage
        uses: codecov/codecov-action@v1
